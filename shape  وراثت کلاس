#include <iostream>
#include <cmath>
using namespace std;

class Shape {
protected: string name;
public:
    Shape(string n) : name(n) {}
    virtual double area() = 0;
    virtual double perimeter() = 0;
    void display() {
        cout << "Shape: " << name << "\nArea: " << area() 
             << "\nPerimeter: " << perimeter() << endl;
    }
};

class Rectangle : public Shape {
    double width, height;
public:
    Rectangle(double w, double h) : Shape("Rectangle"), width(w), height(h) {}
    double area() override { return width * height; }
    double perimeter() override { return 2 * (width + height); }
};

class Circle : public Shape {
    double radius;
public: 
    Circle(double r) : Shape("Circle"), radius(r) {}
    double area() override { return M_PI * radius * radius; }
    double perimeter() override { return 2 * M_PI * radius; }
};

class Triangle : public Shape {
    double side1, side2, side3;
public:
    Triangle(double s1, double s2, double s3) : Shape("Triangle"), side1(s1), side2(s2), side3(s3) {}
    double area() override {
        double s = perimeter() / 2;
        return sqrt(s * (s-side1) * (s-side2) * (s-side3));
    }
    double perimeter() override { return side1 + side2 + side3; }
};

int main() {
    Rectangle(5, 3).display();
    Circle(4).display();
    Triangle(3, 4, 5).display();
    return 0;
}
