#include <iostream> using namespace std;

int bmm(int a, int b) { if (b == 0) return a; return bmm(b, a % b); }

class Kasr { private: int soorat; int makhraj;

void sadeSazi() {
    int x = bmm(abs(soorat), abs(makhraj));
    soorat /= x;
    makhraj /= x;
    if (makhraj < 0) {
        soorat *= -1;
        makhraj *= -1;
    }
}

public: Kasr(int s = 0, int m = 1) { if (m == 0) { throw invalid_argument("Makhraj nemitavand sefr bashad"); } soorat = s; makhraj = m; sadeSazi(); }

void chapKon() const {
    cout << soorat << "/" << makhraj << endl;
}

Kasr operator+(const Kasr& dige) const {
    int s = soorat * dige.makhraj + dige.soorat * makhraj;
    int m = makhraj * dige.makhraj;
    return Kasr(s, m);
}

Kasr operator-(const Kasr& dige) const {
    int s = soorat * dige.makhraj - dige.soorat * makhraj;
    int m = makhraj * dige.makhraj;
    return Kasr(s, m);
}

Kasr operator*(const Kasr& dige) const {
    return Kasr(soorat * dige.soorat, makhraj * dige.makhraj);
}

Kasr operator/(const Kasr& dige) const {
    if (dige.soorat == 0) {
        throw invalid_argument("Taghsim bar sefr mojaz nist");
    }
    return Kasr(soorat * dige.makhraj, makhraj * dige.soorat);
}

};

int main() { try { Kasr a(1, 2); Kasr b(1, 3);

Kasr jam = a + b;
    Kasr tafrigh = a - b;
    Kasr zarb = a * b;
    Kasr taghsim = a / b;

    cout << "Jam: ";
    jam.chapKon();

    cout << "Tafrigh: ";
    tafrigh.chapKon();

    cout << "Zarb: ";
    zarb.chapKon();

    cout << "Taghsim: ";
    taghsim.chapKon();

} catch (exception& e) {
    cout << "Khatta: " << e.what() << endl;
}

return 0;

}

